# Generated by Django 5.1 on 2024-08-28 05:57

import django.contrib.auth.models
import django.utils.timezone
import user.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Userr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('alternative_email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('registration_no', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('year_of_study', models.IntegerField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn Profile')),
                ('leadership_role', models.CharField(blank=True, choices=[('Patron', 'Patron'), ('President', 'President'), ('Deputy President', 'Deputy President'), ('Project Coordinator', 'Project Coordinator'), ('Secretary General', 'Secretary General'), ('Treasurer', 'Treasurer'), ('Organizing Secretary', 'Organizing Secretary'), ('Publicity Secretary', 'Publicity Secretary'), ('Deputy Publicity Secretary', 'Deputy Publicity Secretary'), ('Welfare secretary', 'Welfare Secretary')], max_length=50, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=user.models.profile_image_file_path)),
                ('is_member', models.BooleanField(default=False, verbose_name='Is Member')),
                ('bio', models.TextField(blank=True, max_length=120, null=True)),
                ('is_corporate_member', models.BooleanField(default=False, verbose_name='Is Corporate Member')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='userr_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='userr_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
